version: "3.7"
services:
  postgres-db:
    image: "postgres:14.3"
    container_name: postgres-db
    ports:
      - "5432:5432"
    networks:
      - local-network
    environment:
      - POSTGRES_DB=postgres-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
  redis-cluster:
    image: phuongdm1987/docker-redis-cluster:1.0.0
    container_name: redis-cluster
    # restart: always
    ports:
      - "6379-6384:6379-6384"
    environment:
      - "INITIAL_PORT=6379"
      - "MASTERS=3"
      - "SLAVES_PER_MASTER=0"
      - "SENTINEL=false"
      - "REDIS_CLUSTER_IP=0.0.0.0"
      - "IP=0.0.0.0"
      - "BIND_ADDRESS=0.0.0.0"
      - 'DEFAULT_PASSWORD=password'
    networks:
      - local-network
  sftp:
      image: atmoz/sftp
      container_name: sftp-server
      volumes:
          - ./data/upload:/home/user/upload
      ports:
          - "2222:22"
      command: user:password:1777:::upload
  minio:
    image: minio/minio
    container_name: s3-server
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: s3user
      MINIO_ROOT_PASSWORD: s3password
    command: server --console-address ":9001" /data

#Kafka
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.5.2
  #   hostname: zookeeper
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   networks:
  #     - local-network
  # kafka-1:
  #   image: confluentinc/cp-server:7.5.2
  #   hostname: kafka-1
  #   container_name: kafka-1
  #   networks:
  #     - local-network
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9092:9092"
  #     # - "9101:9101"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     # KAFKA_JMX_PORT: 9101
  #     # KAFKA_JMX_HOSTNAME: localhost
  #     KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:29092
  #     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
  #     CONFLUENT_METRICS_ENABLE: 'true'
  #     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  # kafka-2:
  #   image: confluentinc/cp-server:7.5.2
  #   hostname: kafka-2
  #   container_name: kafka-2
  #   networks:
  #     - local-network
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9093:9093"
  #     # - "9101:9101"
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:29092,PLAINTEXT_HOST://localhost:9093
  #     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     # KAFKA_JMX_PORT: 9101
  #     # KAFKA_JMX_HOSTNAME: localhost
  #     KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-2:29092
  #     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
  #     CONFLUENT_METRICS_ENABLE: 'true'
  #     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  # kafka-3:
  #   image: confluentinc/cp-server:7.5.2
  #   hostname: kafka-3
  #   container_name: kafka-3
  #   networks:
  #     - local-network
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "9094:9094"
  #     # - "9101:9101"
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:29092,PLAINTEXT_HOST://localhost:9094
  #     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 3
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
  #     # KAFKA_JMX_PORT: 9101
  #     # KAFKA_JMX_HOSTNAME: localhost
  #     KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-3:29092
  #     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 3
  #     CONFLUENT_METRICS_ENABLE: 'true'
  #     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.5.2
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - kafka-1
  #     - kafka-2
  #     - kafka-3
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - local-network
  #   environment:
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka-1:29092,kafka-2:29092,kafka-3:29092'
  #     SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  # connect:
  #   image: cnfldemos/cp-server-connect-datagen:0.6.2-7.5.0
  #   hostname: connect
  #   container_name: connect
  #   depends_on:
  #     - kafka-1
  #     - kafka-2
  #     - kafka-3
  #     - schema-registry
  #   ports:
  #     - "8083:8083"
  #   networks:
  #     - local-network
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: 'kafka-1:29092,kafka-2:29092,kafka-3:29092'
  #     CONNECT_REST_ADVERTISED_HOST_NAME: connect
  #     CONNECT_GROUP_ID: compose-connect-group
  #     CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
  #     CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     # CLASSPATH required due to CC-2422
  #     CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.5.2.jar
  #     CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  #     CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  #     CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
  #     CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:7.5.2
  #   hostname: control-center
  #   container_name: control-center
  #   depends_on:
  #     - kafka-1
  #     - kafka-2
  #     - kafka-3
  #     - schema-registry
  #     - connect
  #     # - ksqldb-server
  #   ports:
  #     - "9021:9021"
  #   networks:
  #     - local-network
  #   environment:
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka-1:29092,kafka-2:29092,kafka-3:29092'
  #     CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
  #     CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
  #     # CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
  #     # CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
  #     CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
  #     CONTROL_CENTER_REPLICATION_FACTOR: 3
  #     CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 3
  #     CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 3
  #     CONFLUENT_METRICS_TOPIC_REPLICATION: 3
  #     PORT: 9021
volumes:
  postgres-data:
  minio_storage: 
  redis-cluster_data-0:
  redis-cluster_data-1:
  redis-cluster_data-2:
networks:
  local-network:
